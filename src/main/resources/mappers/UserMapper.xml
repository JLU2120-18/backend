<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.salary.dao.UserMapper">
    <sql id="Base_Information_Column">
        id, type, username, address, socsec_id, tax_rate, other_cast, phone, hour_wage, salary, commission_rate, duration_limit
    </sql>

    <insert id="insert">
        insert into user(type, id, username, address, socsec_id, tax_rate, other_cast, phone, hour_wage, salary, commission_rate, duration_limit)
        values (#{type}, #{id}, #{username}, #{address}, #{socsecId}, #{taxRate}, #{otherCast}, #{phone}, #{hourWage}, #{salary}, #{commissionRate}, #{durationLimit});
    </insert>

    <update id="updateUserById">
        update user
        <set>
            <if test="type != null and type.length() > 0">
                type = #{type},
            </if>
            <if test="username != null and username.length() > 0">
                username = #{username},
            </if>
            <if test="address != null and address.length() > 0">
                address = #{address},
            </if>
            <if test="socsecId != null and socsecId.length() > 0">
                socsec_id = #{socsecId},
            </if>
            <if test="taxRate != null and taxRate.length() > 0">
                tax_rate = #{taxRate},
            </if>
            <if test="otherCast != null and otherCast.length() > 0">
                other_cast = #{otherCast},
            </if>
            <if test="phone != null and phone.length() > 0">
                phone = #{phone},
            </if>
            <if test="hourWage != null and hourWage.length() > 0">
                hour_wage = #{hourWage},
            </if>
            <if test="salary != null and salary.length() > 0">
                salary = #{salary},
            </if>
            <if test="commissionRate != null and commissionRate.length() > 0">
                commission_rate = #{commissionRate},
            </if>
            <if test="durationLimit != null and durationLimit.length() > 0">
                duration_limit = #{durationLimit},
            </if>
            <if test="payment != null and payment.length() > 0">
                payment = #{payment},
            </if>
            <if test="mailAddress != null and mailAddress.length() > 0">
                mail_address = #{mailAddress},
            </if>
            <if test="bankName != null and bankName.length() > 0">
                bank_name = #{bankName},
            </if>
            <if test="bankAccount != null and bankAccount.length() > 0">
                bank_account = #{bankAccount},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteUserById">
        delete from user
        where id = #{id}
    </delete>

    <select id="selectUserById" resultType="com.salary.pojo.User">
        select *
        from user
        where id = #{id};
    </select>

    <select id="selectUserBaseInfoById" resultType="com.salary.pojo.User">
        select <include refid="Base_Information_Column" />
        from user
        where id = #{id}
    </select>

    <select id="selectUserBaseInfoAndPaymentById" resultType="com.salary.pojo.User">
        select <include refid="Base_Information_Column" />, payment
        from user
        where id = #{id}
    </select>

    <select id="selectNameById" resultType="string">
        select username
        from user
        where id = #{employeeId};
    </select>

    <select id="selectIdsPrefixWithId" resultType="java.lang.String">
        select id
        from user
        <where>
            <if test="id != null and id.length() > 0">
                id like #{id}"%"
            </if>
        </where>
    </select>

    <select id="countPrefixWithId" resultType="java.lang.Long">
        select count(*)
        from user
        <where>
            <if test="id != null and id.length() > 0">
                id like #{id}"%"
            </if>
        </where>
    </select>

    <select id="pageUserBaseInfoPrefixWithId" resultType="com.salary.pojo.User">
        select <include refid="Base_Information_Column" />
        from user
        <where>
            <if test="id != null and id.length() > 0">
                id like #{id}"%"
            </if>
        </where>
        limit #{pageBegin}, #{pageSize}
    </select>



</mapper>